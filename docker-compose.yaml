version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      - mynetwork

  backend:
    build:
      context: ./backend/Express-app
      dockerfile: Dockerfile
    ports:
      - "8087:8084"
    volumes:
      - ./backend/Express-app:/usr/src/app  # فقط فایل‌های ضروری رو mount کنید
      - node_modules:/usr/src/app/node_modules  # node_modules رو volume کنید
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    depends_on:
      - postgres
    restart: always
    networks:
      - mynetwork
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8087/health"]  # فرض بر اینکه یک endpoint health دارید
      interval: 10s
      timeout: 5s
      retries: 5

  redis-commander:
    image: rediscommander/redis-commander:latest
    environment:
      - REDIS_HOSTS=local:redis:6379
      - HTTP_USER=root
      - HTTP_PASSWORD=qwerty
    ports:
      - 8081:8081

    depends_on:
      - redis

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 5050:80
    environment:
      PGADMIN_DEFAULT_EMAIL: user-name@domain-name.com
      PGADMIN_DEFAULT_PASSWORD: strong-password

  redis:
    image: redis:latest
    command: redis-server

    ports:
      - 3011:6379

  panel :
    build:
      context: ./propy-panel/next-ui
      dockerfile: Dockerfile
    ports:
      - "4000:3000"


volumes:
  postgres_data:
  node_modules:

networks:
  mynetwork:
    driver: bridge